name: CI/CD - Tests, Coverage et Sonar

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  full-tests-and-sonar:
    name: Tests back/front + Analyse SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Configuration de JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          

      - name: Installation des dépendances Maven
        run: mvn clean install
        working-directory: back

      - name: Exécution des tests avec JaCoCo
        run: mvn test jacoco:report
        working-directory: back

     
      - name: Installation de Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Installer Angular CLI
        run: npm install -g @angular/cli

      - name: Installation des dépendances
        run: npm install
        working-directory: front

      - name: Exécution des tests avec couverture
        run:  npm run test -- --watch=false --code-coverage --browsers=ChromeHeadless
        working-directory: front

      - name: Analyse SonarCloud (back + front)
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: npx sonar-scanner

      - name: Upload du rapport de couverture JaCoCo
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site

      - name: Upload du rapport de couverture Angular
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: angular-coverage-report
          path: front/coverage/

      


 # - name: Set up JDK 17 for SonarQube
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: '17'
      #     distribution: 'adopt'
      # - name: Run SonarQube Analysis
      #   working-directory: back
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=Adri-Des_Manage-a-project-with-a-CI-CD-approach-back -Dsonar.organization=adri-des -Dsonar.host.url=https://sonarcloud.io  -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

  # frontend-tests:
  #   name: Tests et couverture - Frontend
  #   runs-on: ubuntu-latest

  #   steps:
      # - name: Checkout du code
      #   uses: actions/checkout@v4
      # - name: SonarCloud Analysis for Front
      #   working-directory: front
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: |
      #     npx sonar-scanner \
      #     -Dsonar.projectKey=Adri-Des_Manage-a-project-with-a-CI-CD-approach-front \
      #     -Dsonar.organization=adri-des \
      #     -Dsonar.sources=src \
      #     -Dsonar.exclusions=**/*.spec.ts \
      #     -Dsonar.host.url=https://sonarcloud.io \
      #     -Dsonar.login=$SONAR_TOKEN 
      #     -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
